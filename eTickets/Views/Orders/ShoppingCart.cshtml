@using eTickets.Data.ViewModels
@model ShoppingCartVM

@{
    ViewData["Title"] = "Shopping cart summary";
}


<div class="container">
    <h1 class="text-center mt-4">Your Shopping Cart Summary</h1>

    <table class="table table-bordered table-hover">
        <thead>
            <tr>
                <th scope="col">Selected Amount</th>
                <th scope="col">Movie</th>
                <th scope="col">Price</th>
                <th scope="col">Subtotal</th>
                <th scope="col">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.ShoppingCart.ShoppingCartItems)
            {
                <tr>
                    <td class="align-middle">@item.Amount</td>
                    <td class="align-middle">@item.Movie.Name</td>
                    <td class="align-middle">@item.Movie.Price.ToString("c")</td>
                    <td class="align-middle">@((item.Amount * item.Movie.Price).ToString("c"))</td>
                    <td class="align-middle">
                        <a class="text-danger me-2" asp-controller="Orders" asp-action="RemoveItemFromShoppingCart" asp-route-id="@item.Movie.Id">
                            <i class="bi bi-cart-dash"></i>
                        </a>
                        <a class="text-success" asp-controller="Orders" asp-action="AddItemToShoppingCart" asp-route-id="@item.Movie.Id">
                            <i class="bi bi-cart-plus"></i>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <td colspan="2"></td>
                <td><b>Total:</b></td>
                <td class="align-middle">@Model.ShoppingCartTotal.ToString("c")</td>
                <td></td>
            </tr>
        </tfoot>
    </table>

    <div class="mt-4">
        <div class="btn-group d-flex justify-content-between">
            <div>
                <a class="btn btn-outline-success rounded" asp-controller="Movies" asp-action="Index">Add More Items</a>
            </div>
            <div id="paypal-btn"></div>
        </div>
    </div>
</div>

@section Scripts {

    <script src="https://www.paypalobjects.com/api/checkout.js"></script>

    <script>

        let _total = @Html.Raw(Model.ShoppingCartTotal);

        paypal.Button.render({
            //Configure environment
            env: 'sandbox',
            client: {
                sandbox: 'AV_n5Arkui6SNvMrSEwlFhUK3uZ4ZlUrGd3_jZP1kREiD9sOYQXSrkrOc_76cZPeyQ9BclP2sHrqbIPK'
            },

            //Customize button
            locale: 'en_US',
            style: {
                size: 'small',
                color: 'gold',
                shape: 'pill'
            },
            commit: true,

            //Set up a payment
            payment: function (data, actions) {
                return actions.payment.create({
                    transactions: [{
                        amount: {
                            total: _total,
                            currency: 'MYR'
                        }
                    }]
                });
            },

            //Execute the payment
            onAuthorize: function (data, actions) {
                return actions.payment.execute().then(function () {
                    var url = '@Url.Action("CompleteOrder", "Orders", new { })';
                    window.location.href = url;
                });
            }

        }, '#paypal-btn')
    </script>
}

@*                             @using eTickets.Data.ViewModels
@model ShoppingCartVM

@{
    ViewData["Title"] = "Shopping Cart Summary";
}

<div class="container">
    <h1 class="text-center mt-4">Your Shopping Cart Summary</h1>

    <table class="table table-bordered table-hover">
        <thead>
            <tr>
                <th scope="col">Selected Amount</th>
                <th scope="col">Movie</th>
                <th scope="col">Price</th>
                <th scope="col">Subtotal</th>
                <th scope="col">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.ShoppingCart.ShoppingCartItems)
            {
                <tr>
                    <td class="align-middle">@item.Amount</td>
                    <td class="align-middle">@item.Movie.Name</td>
                    <td class="align-middle">@item.Movie.Price.ToString("c")</td>
                    <td class="align-middle">@((item.Amount * item.Movie.Price).ToString("c"))</td>
                    <td class="align-middle">
                        <a class="text-danger me-2" asp-controller="Orders" asp-action="RemoveItemFromShoppingCart" asp-route-id="@item.Movie.Id">
                            <i class="bi bi-cart-dash"></i>
                        </a>
                        <a class="text-success" asp-controller="Orders" asp-action="AddItemToShoppingCart" asp-route-id="@item.Movie.Id">
                            <i class="bi bi-cart-plus"></i>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <td colspan="2"></td>
                <td><b>Total:</b></td>
                <td class="align-middle">@Model.ShoppingCartTotal.ToString("c")</td>
                <td></td>
            </tr>
        </tfoot>
    </table>

    <div class="mt-4">
        <div class="btn-group d-flex justify-content-between">
            <div>
                <a class="btn btn-outline-success rounded" asp-controller="Movies" asp-action="Index">Add More Items</a>
            </div>
            <div id="paypal-btn"></div>
        </div>
    </div>
</div>

@section Scripts {

    <script src="https://www.paypalobjects.com/api/checkout.js"></script>

    <script>

        let _total = @Html.Raw(Model.ShoppingCartTotal);

        paypal.Button.render({
            //Configure environment
            env: 'sandbox',
            client: {
                sandbox: 'AV_n5Arkui6SNvMrSEwlFhUK3uZ4ZlUrGd3_jZP1kREiD9sOYQXSrkrOc_76cZPeyQ9BclP2sHrqbIPK'
            },

            //Customize button
            locale: 'en_US',
            style: {
                size: 'small',
                color: 'gold',
                shape: 'pill'
            },
            commit: true,

            //Set up a payment
            payment: function (data, actions) {
                return actions.payment.create({
                    transactions: [{
                        amount: {
                            total: _total,
                            currency: 'MYR'
                        }
                    }]
                });
            },

            //Execute the payment
            onAuthorize: function (data, actions) {
                return actions.payment.execute().then(function () {
                    var url = '@Url.Action("CompleteOrder", "Orders", new { })';
                    window.location.href = url;
                });
            }

        }, '#paypal-btn')
    </script>
} *@